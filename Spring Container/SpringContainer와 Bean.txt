SpringContainer와 Bean

ApplicationContext를 생성해서 getBean을 이용해서 빈을 가져오는 방식을 사용할 일이 거의 없음.

순수한 자바 Application에서 스프링 빈을 가져와서 써야할 일이 있을 경우 사용하는 방식
+ 자동 의존 관계 주입을 좀 더 자세히 알기 위해 배워둘 필요가 있음.


스프링 컨테이너

ApplicationContext 를 스프링 컨테이너라 한다.
기존에는 개발자가 AppConfig 를 사용해서 직접 객체를 생성하고 DI를 했지만, 
이제부터는 스프링 컨테이너를 통해서 사용한다.

스프링 컨테이너는 @Configuration이 붙은 AppConfig 를 설정(구성) 정보로 사용한다.
여기서 @Bean 이라 적힌 메서드를 모두 호출해서 반환된 객체를 스프링 컨테이너에 등록한다. 
이렇게 스프링 컨테이너에 등록된 객체를 스프링 빈이라 한다.

스프링 빈은 applicationContext.getBean() 메서드를 사용
해서 찾을 수 있다

스프링 빈은 @Bean 이 붙은 메서드의 명을 스프링 빈의 이름으로 사용한다. ( memberService ,orderService )


생성 : 
new AnnotationConfigApplicationContext(AppConfig.class);
이 클래스는 ApplicationContext 인터페이스의 구현체이다.



스프링 빈

1. 조회

- 기본
ac.getBean(빈이름, 타입)
ac.getBean(타입)

조회 대상 스프링 빈이 없으면 예외 발생
NoSuchBeanDefinitionException: No bean named 'xxxxx' available

타입으로 조회시 같은 타입의 스프링 빈이 둘 이상이면 오류가 발생한다. 이때는 빈 이름을 지정하자.
ac.getBeansOfType() 을 사용하면 해당 타입의 모든 빈을 조회할 수 있다.


- 상속관계
부모 타입으로 조회하면, 자식 타입도 함께 조회한다.
그래서 모든 자바 객체의 최고 부모인 Object 타입으로 조회하면, 모든 스프링 빈을 조회한다.




