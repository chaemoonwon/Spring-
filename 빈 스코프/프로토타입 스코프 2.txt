프로토타입 스코프 2

지정한 빈을 컨테이너에서 대신 찾아주는 DL 서비스를 제공하는 것이 바로 ObjectProvider

실행해보면 prototypeBeanProvider.getObject() 을 통해서 항상 새로운 프로토타입 빈이 생성되는 것
을 확인할 수 있다.
ObjectProvider의  getObject()를 호출하면 내부에서는 스프링 컨테이너를 통해 해당 빈을 찾아서 반환
한다. (DL)
스프링이 제공하는 기능을 사용하지만, 기능이 단순하므로 단위테스트를 만들거나 mock 코드를 만들기는 훨씬 쉬워진다.




JSR-330 Provider
javax.inject.Provider 라는 JSR-330 자바 표준을 사용하는 방법

스프링부트 3.0 미만
javax.inject:javax.inject:1 라이브러리를 gradle에 추가해야 한다.
스프링부트 3.0 이상
jakarta.inject:jakarta.inject-api:2.0.1 라이브러리를 gradle에 추가해야 한다

실행해보면 provider.get() 을 통해서 항상 새로운 프로토타입 빈이 생성되는 것을 확인할 수 있다.
provider의 get() 을 호출하면 내부에서는 스프링 컨테이너를 통해 해당 빈을 찾아서 반환한다. (DL)
자바 표준이고, 기능이 단순하므로 단위테스트를 만들거나 mock 코드를 만들기는 훨씬 쉬워진다.
Provider는 지금 딱 필요한 DL 정도의 기능만 제공한다.

특징
 - get() 메서드 하나로 기능이 매우 단순하다.
 - 별도의 라이브러리가 필요하다.
 - 자바 표준이므로 스프링이 아닌 다른 컨테이너에서도 사용할 수 있다.


